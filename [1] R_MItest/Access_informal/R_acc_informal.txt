#ACCESS INFORMAL
##########################################################################
dev.off(dev.list()["RStudioGD"]) # clean the Graph Area
rm(list=ls())                    # clean the Workspace (dataset)
cat("\014")                      # clean the console area
graphics.off()                   # close graphics windows (For R Script)
#########################################################################

#Data <- read.csv(file.choose())
Data <- read.csv("R_acc_informal.csv")
library(tmvtnorm)
# Random number generation
set.seed(123)

#Data Input
#Age<30= Data[,2]
#Household income<30k= Data[,3]
RDVAR = Data[,4]  # Reported distance
mu1   = Data[,5]
mu2   = Data[,6]

Theta1=1.4993
Theta2=3.629

VCMatrix= matrix(c(0.418, 0.405, 0.405, 1.00), 2, 2)

#Draws = 1000  # Number of draws from the bivariate normal distribution

D1upper = matrix(0,length(RDVAR),1)
D1lower = matrix(0,length(RDVAR),1)
D2upper = matrix(0,length(RDVAR),1)
D2lower = matrix(0,length(RDVAR),1)
MUD1    = matrix(0,length(RDVAR),1)
MUD2    = matrix(0,length(RDVAR),1)

drawx=1000 # Number of draws from the bivariate normal distribution

#########################################################################
#                                                                       #
#-------------------Drawing for a specified individual------------------#
#                                                                       #
#########################################################################
#q=600
#RangeD=1000
#D1upper[q] = RDVAR[q]+RangeD/2
#D1lower[q] = RDVAR[q]-RangeD/2
#D2upper[q] = Inf
#D2lower[q] = -Inf
#MUD1[q] = Data[q,5]
#MUD2[q] = Data[q,6]

#GH <- rmvnorm(n=drawx, mean=c(MUD1[q],MUD2[q]),sigma=VCMatrix)

#FF<-array(0,dim=c(length(RDVAR),drawx,2))
#FF[q,,]=GH        

#ImpD = as.integer(exp(FF[q,,1]))
#write.csv(cbind(FF[q,,],ImpD),paste(c("C:/vkt1/R_MItest/Access_informal/Output_acc_informal/",q,".csv"), collapse = ''))



#########################################################################
#                                                                       #
#----------------Drawing 1000 values for each individual----------------#
#                                                                       #
#########################################################################

FF<-array(0,dim=c(length(RDVAR),drawx,2))

for (q in 1:length(RDVAR)){
  cat("\014") 
  print(c("Indivdiual ",q))
  
  #-----------------------------MOD of 100-------------------------------#
  if((RDVAR[q] %% 50 == 0) & (RDVAR[q] %% 500 != 0)){
    
    D1upper[q] = RDVAR[q]+50
    D1lower[q] = RDVAR[q]-50
    D2upper[q] = 0
    D2lower[q] = -Inf
    MUD1[q] = Data[q,5]
    MUD2[q] = Data[q,6]
    
    GH <- rtmvnorm(n=drawx, mean=c(MUD1[q],MUD2[q]),
                   sigma=VCMatrix, lower=c(log(D1lower[q]), D2lower[q]), upper=c(log(D1upper[q]),D2upper[q]),
                   algorithm="gibbs")
    FF[q,,]=GH        
    
  }
  
  #-----------------------------MOD of 500-------------------------------#
  else if((RDVAR[q] %% 500 == 0) & (RDVAR[q] %% 1000 != 0)){
    
    GH1=matrix(0,drawx,1)
    GH2=matrix(0,drawx,1)
    D1upper[q] = RDVAR[q]+250
    D1lower[q] = RDVAR[q]-250
    D2upper[q] = Theta1
    D2lower[q] = -Inf
    MUD1[q] = Data[q,5]
    MUD2[q] = Data[q,6]
    
    count=1
    while (count <= drawx){
      
      GH =rtmvnorm(n=1, mean=c(MUD1[q],MUD2[q]),
                   sigma=VCMatrix, lower=c(log(D1lower[q]),D2lower[q]), upper=c(log(D1upper[q]),D2upper[q]),
                   algorithm="gibbs")
      
      #---- Accept and Reject Sampling Algorithm----#
      
      if ((GH[2]<0) & (exp(GH[1])>=(RDVAR[q]-50)) & (exp(GH[1])<=(RDVAR[q]+50))){
        GH1[count]=GH[1]
        GH2[count]=GH[2]
        #print(count)
        count = count+1
      } else if ((GH[2]>=0) & (GH[2]<Theta1)){
        GH1[count]=GH[1]
        GH2[count]=GH[2]
        count = count+1
      }
    }
    U2 = as.matrix(cbind(GH1,GH2),drawx,2)
    FF[q,,]=U2
  }
  #-----------------------------MOD of 1000-------------------------------#
  else if((RDVAR[q] %% 1000 == 0) & (RDVAR[q] %% 5000 != 0)){
    
    GH1=matrix(0,drawx,1)
    GH2=matrix(0,drawx,1)
    D1upper[q] = RDVAR[q]+500
    D1lower[q] = RDVAR[q]-500
    D2upper[q] = Theta2
    D2lower[q] = -Inf
    MUD1[q] = Data[q,5]
    MUD2[q] = Data[q,6]
    
    count=1
    while (count <= drawx){
      
      GH =rtmvnorm(n=1, mean=c(MUD1[q],MUD2[q]),
                   sigma=VCMatrix, lower=c(log(D1lower[q]),D2lower[q]), upper=c(log(D1upper[q]),D2upper[q]),
                   algorithm="gibbs")
      
      #---- Accept and Reject Sampling Algorithm----#
      
      if ((GH[2]<0) & (exp(GH[1])>=(RDVAR[q]-50)) & (exp(GH[1])<=(RDVAR[q]+50))){
        GH1[count]=GH[1]
        GH2[count]=GH[2]
        #print(count)
        count = count+1
      } else if ((GH[2]>=Theta1) & (GH[2]<Theta2)){
        GH1[count]=GH[1]
        GH2[count]=GH[2]
        count = count+1
      }
    }
    U2 = as.matrix(cbind(GH1,GH2),drawx,2)
    FF[q,,]=U2
  }
  
  #-----------------------------MOD of 5000-------------------------------#
  else if (RDVAR[q] %% 5000 ==0){
    D1upper[q] = RDVAR[q]+1000
    D1lower[q] = RDVAR[q]-1000
    D2upper[q] = Inf
    D2lower[q] = -Inf
    print(c(D2upper[q],D2lower[q]))
    MUD1[q] = Data[q,5]
    MUD2[q] = Data[q,6]
    
    count=1
    while (count <= drawx)
    {
      GH =rtmvnorm(n=1, mean=c(MUD1[q],MUD2[q]),
                   sigma=VCMatrix, lower=c(log(D1lower[q]),D2lower[q]), upper=c(log(D1upper[q]),D2upper[q]),
                   algorithm="gibbs")
      
      
      #---- Accept and Reject Sampling Algorithm----#
      
      if ((GH[2]<0) & (exp(GH[1])>=(RDVAR[q]-50)) & (exp(GH[1])<=(RDVAR[q]+50)))
      {
        GH1[count]=GH[1]
        GH2[count]=GH[2]
        count = count+1
      } 
      else if ((GH[2]>=0) & (GH[2]<Theta1))
      {
        if ((exp(GH[1])>=(RDVAR[q]-250)) & (exp(GH[1])<=(RDVAR[q]+250)))
        {
          GH1[count]=GH[1]
          GH2[count]=GH[2]
          count = count+1
        }
      } 
      else if ((GH[2]>=Theta1) & (GH[2]<Theta2))
      {
        if ((exp(GH[1])>=(RDVAR[q]-500)) & (exp(GH[1])<=(RDVAR[q]+500)))
        {
          GH1[count]=GH[1]
          GH2[count]=GH[2]
          count = count+1
        }
      } 
      else if ((GH[2]>=Theta2))
      {
        GH1[count]=GH[1]
        GH2[count]=GH[2]
        count = count+1
      }
    }
    U3 = as.matrix(cbind(GH1,GH2),drawx,2)
    FF[q,,]=U3
  }
  
  ImpD = as.integer(exp(FF[q,,1]))
  
  write.csv(cbind(FF[q,,],ImpD),paste(c("C:/vkt1/R_MItest/Access_informal/Output_acc_informal/",q,".csv"), collapse = ''))
  
}



#===========================================================================================
# Loop to printing the results into one single file
#===========================================================================================

# Converting a matrix in 3D into 2D dimensions
rows=length(RDVAR)*drawx
Collection3 =matrix(FF,rows,2)
lnyD1 = exp(Collection3[,1])
write.csv(Collection3, paste(c("C:/vkt1/R_MItest/Access_informal/Output_acc_informal/","AllImputed_informal.csv"), collapse = ''))


#===========================================================================================
# Print Histograms of several individuals
#===========================================================================================

print(" Case One===== indivdiual 7,600m distance")
hist(exp(FF[7,,1]),border="black", col="lightblue",xlim=c(6000,9000), ylim=c(0,300),
     breaks=10,prob = F)
print(" Case Two===== indivdiual 500")
hist(exp(FF[3,,1]),border="black", col="lightblue",xlim=c(2500,3500), ylim=c(0,300),
     breaks=16,prob = F)
print(" Case Three===== indivdiual 972")
hist(exp(FF[24,,1]),border="black", col="lightblue",xlim=c(5000,15000), ylim=c(0,300),
     breaks=10,prob = F)


#===========================================================================================
# Draw the travel distance by each individual -Density Plot 
#===========================================================================================

h <- hist(lnyD1, breaks = 50, plot=FALSE#,border="black", col="lightblue",freq=F #probability = F #freq=T
)
h$counts=h$counts/sum(h$counts)   #h$mids,h$counts
plot(h,border="black", col="lightblue"
     ,xlim = c(0,20000)#range(h$mids)* 0.9      # , xlim = c(0,3000)
     ,ylim = c(0,0.25)#(max(h$counts)+max(h$counts)/1))
     # , ylim = c(0,0.2)
     #, axis(side=1, at=c(0,6000))      # c(-4, 0, 4)
     ,cex.lab=1.2, cex.axis=1.2, cex.main=1.2, cex.sub=1.2
     ,main="Histogram for Distance Traveled in m"
     ,xlab="Distance (m)"
     ,ylab="Probability"
     ,xaxs="i", yaxs="i" # meaning that 4% of the axis value is left on each side. To set this to 0: xaxs="i". See the xaxs section in ?par for more information.
     ,lwd = 2 # axes line width
     # ,par(lwd=1.2)
     ,axes = FALSE
     ,ann=FALSE, xaxt="n", yaxt="n"
)

#grid(24, 24, lwd = 1,col ='black')
#And then we can also add a legend, so it will be easy to tell which line is which.

abline(v=seq(0, 5000, 500), col="gray48",lty = 5,lwd = 1.2) # To add horizantl line simply add h=0.001,
abline(v=seq(0, 5000, 100), col="darkgray",lty = 4,lwd = 1.2) # To add horizantl line simply add h=0.001,
abline(h=seq(0,(0.2),0.01), col="darkgray",lty = 5,lwd = 1.2) # To add horizantl line simply add h=0.001,
abline(h=c(0.05,0.1,0.15,0.2), col="gray48",lty = 5,lwd = 1.2) # To add horizantl line simply add h=0.001,
#abline(h=0.15, col="darkgray",lty = 5,lwd = 1.2) # To add horizantl line simply add h=0.001,
box(lty = 5, col = 'red',font = 50, font.lab = 7, font.axis = 20
    ,cex.lab=1.2, cex.axis=1.2, cex.main=1.2, cex.sub=1.2
    ,lwd = 3)


# generate the plot again to come to the front
plot(h,add=TRUE,col="lightblue",axes = FALSE,ann=FALSE, xaxt="n", yaxt="n"
)

#axis(1, h$breaks, labels = seq(0,5500,100), tick = TRUE, padj= -1.5)  #h$breaks

# adjust the axes to fit your data range
axis(1, seq(0,6000,500), labels = seq(0,6000,500), tick = TRUE, padj= -0.4,cex.axis = 1.2)  #h$breaks
axis(2,labels = TRUE, tick = TRUE, padj= -0.1,cex.axis = 1.2)  #h$breaks

# Draw lables of the axeses
mtext(side = 1, text = "Distance (m)", line = 3,padj= -1.5, cex=1.2) 
mtext(side = 2, text = "Probability", line = 3,padj= 0.8, cex=1.2) 
# Title for the graph 
title(main="Histogram for Distance Traveled in m")
# Draw the lognormal distribution curve
lines(seq(0, 5000, by=0.1), (100*dlnorm(seq(0, 5000, by=0.1),
                                        mean(log(lnyD1)), sd(log(lnyD1)))), col="blue",lwd = 2,
      font = 5, font.lab = 7, font.axis = 7)

# abline(v=767.0267, col="black",lty = 5,lwd = 5) # To add horizantl line simply add h=0.001,
# abline(v=602.1982, col="red",lty = 5,  lwd = 5) # To add horizantl line simply add h=0.001,
# abline(v=759.7315, col="blue",lty = 5, lwd = 5) # To add horizantl line simply add h=0.001,

abline(v=c(mean(lnyD1)) #,mean(RDVAR),exp(MUD1[1]))
       , col = c("chartreuse4", "royalblue", "red","blue")
       , lty = c(4,5,5)
       ,lwd = c(2,1.2,1.2))

legend(x = "right", # location of legend within plot area
       c("Mean", "Density","logNormal distribution"),
       col = c("chartreuse4", "coral1", "blue","red"),
       lwd = c(2, 2, 2,3),
       fill = c("chartreuse4", "coral1", "blue","red")
       ,title="Line types"
       ,text.font=2
       ,bg='white')

# Draw density function
#lines(density(lnyD1), col="red")
den_gh =density(lnyD1,na.rm=T)
den_ghx = den_gh$x
den_ghy = den_gh$y*100  # 100 scale is for matching our y-axis new scale which show probability not density
# Remember that probability =(density in y)*(base of the bar)

lines(den_ghx,den_ghy, # density plot
      lwd = 2, # thickness of line
      col = "coral1"
)

# Add a line for the mean:
# 
# abline(v = mean(RDVAR),
#        col = "royalblue",
#        lwd = 2)

# #And add a line for the median:
# 
# abline(v = median(RDVAR),
#        col = "red",
#        lwd = 2)



#===========================================================================================
# Draw the travel distance by each individual -Frequency Plot 
#===========================================================================================

h2 <- hist(lnyD1, breaks = 50, plot=FALSE#,border="black", col="lightblue",freq=F #probability = F #freq=T
)
SS =max(h2$counts)+max(h2$counts)/3
h2 <- hist(lnyD1, breaks = 50, plot=T,freq=T
           ,xlim = c(0,20000)#range(h$mids)* 0.9      # , xlim = c(0,3000)
           ,ylim = c(0,SS)#(max(h$counts)+max(h$counts)/1))
           ,xaxs="i", yaxs="i"
           ,axes = FALSE
           ,ann=FALSE, xaxt="n", yaxt="n"
           
)


#grid(24, 24, lwd = 1,col ='black')
#And then we can also add a legend, so it will be easy to tell which line is which.

abline(v=seq(0, 5000, 500), col="gray48",lty = 5,lwd = 1.2) # To add horizantl line simply add h=0.001,
abline(v=seq(0, 5000, 100), col="darkgray",lty = 4,lwd = 1.2) # To add horizantl line simply add h=0.001,
abline(h=seq(0,SS+83646.67,10000), col="darkgray",lty = 5,lwd = 1.2) # To add horizantl line simply add h=0.001,
abline(h=c(50000,100000,150000,200000), col="gray48",lty = 5,lwd = 1.2) # To add horizantl line simply add h=0.001,
#abline(h=0.15, col="darkgray",lty = 5,lwd = 1.2) # To add horizantl line simply add h=0.001,
box(lty = 5, col = 'red',font = 50, font.lab = 7, font.axis = 20
    ,cex.lab=1.2, cex.axis=1.2, cex.main=1.2, cex.sub=1.2
    ,lwd = 3)


# generate the plot again to come to the front
plot(h2,add=TRUE,col="lightblue",axes = FALSE,ann=FALSE, xaxt="n", yaxt="n"
)

#axis(1, h$breaks, labels = seq(0,5500,100), tick = TRUE, padj= -1.5)  #h$breaks

# adjust the axes to fit your data range
axis(1, seq(0,6000,500), labels = seq(0,6000,500), tick = TRUE, padj= -0.4,cex.axis = 1.2)  #h$breaks
axis(2,labels = TRUE, tick = TRUE, padj= -0.1,cex.axis = 1.2)  #h$breaks

# Draw lables of the axeses
mtext(side = 1, text = "Distance (m)", line = 3,padj= -1.5, cex=1.2) 
mtext(side = 2, text = "Probability", line = 3,padj= 0.8, cex=1.2) 
# Title for the graph 
title(main="Histogram for Distance Traveled in m")

abline(v=c(mean(lnyD1)) #,mean(RDVAR),exp(MUD1[1]))
       , col = c("chartreuse4", "royalblue", "red","blue")
       , lty = c(4,5,5)
       ,lwd = c(2,1.2,1.2))

legend(x = "right", # location of legend within plot area
       c("Mean"),
       col = c("chartreuse4", "coral1", "blue","red"),
       lwd = c(2, 2, 2,3),
       fill = c("chartreuse4", "coral1", "blue","red")
       ,title="Line types"
       ,text.font=2
       ,bg='white')


