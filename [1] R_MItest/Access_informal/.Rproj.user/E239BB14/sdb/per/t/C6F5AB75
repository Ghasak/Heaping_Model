{
    "collab_server" : "",
    "contents" : "#ACCESS INFORMAL\n##########################################################################\ndev.off(dev.list()[\"RStudioGD\"]) # clean the Graph Area\nrm(list=ls())                    # clean the Workspace (dataset)\ncat(\"\\014\")                      # clean the console area\ngraphics.off()                   # close graphics windows (For R Script)\n#########################################################################\n\n#Data <- read.csv(file.choose())\nData <- read.csv(\"R_acc_informal.csv\")\nlibrary(tmvtnorm)\n# Random number generation\nset.seed(123)\n\n#Data Input\n#Age<30= Data[,2]\n#Household income<30k= Data[,3]\nRDVAR = Data[,4]  # Reported distance\nmu1   = Data[,5]\nmu2   = Data[,6]\n\nTheta1=1.4993\nTheta2=3.629\n\nVCMatrix= matrix(c(0.418, 0.405, 0.405, 1.00), 2, 2)\n\n#Draws = 1000  # Number of draws from the bivariate normal distribution\n\nD1upper = matrix(0,length(RDVAR),1)\nD1lower = matrix(0,length(RDVAR),1)\nD2upper = matrix(0,length(RDVAR),1)\nD2lower = matrix(0,length(RDVAR),1)\nMUD1    = matrix(0,length(RDVAR),1)\nMUD2    = matrix(0,length(RDVAR),1)\n\ndrawx=1000 # Number of draws from the bivariate normal distribution\n\n#########################################################################\n#                                                                       #\n#-------------------Drawing for a specified individual------------------#\n#                                                                       #\n#########################################################################\n#q=600\n#RangeD=1000\n#D1upper[q] = RDVAR[q]+RangeD/2\n#D1lower[q] = RDVAR[q]-RangeD/2\n#D2upper[q] = Inf\n#D2lower[q] = -Inf\n#MUD1[q] = Data[q,5]\n#MUD2[q] = Data[q,6]\n\n#GH <- rmvnorm(n=drawx, mean=c(MUD1[q],MUD2[q]),sigma=VCMatrix)\n\n#FF<-array(0,dim=c(length(RDVAR),drawx,2))\n#FF[q,,]=GH        \n\n#ImpD = as.integer(exp(FF[q,,1]))\n#write.csv(cbind(FF[q,,],ImpD),paste(c(\"C:/vkt1/R_MItest/Access_informal/Output_acc_informal/\",q,\".csv\"), collapse = ''))\n\n\n\n#########################################################################\n#                                                                       #\n#----------------Drawing 1000 values for each individual----------------#\n#                                                                       #\n#########################################################################\n\nFF<-array(0,dim=c(length(RDVAR),drawx,2))\n\nfor (q in 1:length(RDVAR)){\n  cat(\"\\014\") \n  print(c(\"Indivdiual \",q))\n  \n  #-----------------------------MOD of 100-------------------------------#\n  if((RDVAR[q] %% 50 == 0) & (RDVAR[q] %% 500 != 0)){\n    \n    D1upper[q] = RDVAR[q]+50\n    D1lower[q] = RDVAR[q]-50\n    D2upper[q] = 0\n    D2lower[q] = -Inf\n    MUD1[q] = Data[q,5]\n    MUD2[q] = Data[q,6]\n    \n    GH <- rtmvnorm(n=drawx, mean=c(MUD1[q],MUD2[q]),\n                   sigma=VCMatrix, lower=c(log(D1lower[q]), D2lower[q]), upper=c(log(D1upper[q]),D2upper[q]),\n                   algorithm=\"gibbs\")\n    FF[q,,]=GH        \n    \n  }\n  \n  #-----------------------------MOD of 500-------------------------------#\n  else if((RDVAR[q] %% 500 == 0) & (RDVAR[q] %% 1000 != 0)){\n    \n    GH1=matrix(0,drawx,1)\n    GH2=matrix(0,drawx,1)\n    D1upper[q] = RDVAR[q]+250\n    D1lower[q] = RDVAR[q]-250\n    D2upper[q] = Theta1\n    D2lower[q] = -Inf\n    MUD1[q] = Data[q,5]\n    MUD2[q] = Data[q,6]\n    \n    count=1\n    while (count <= drawx){\n      \n      GH =rtmvnorm(n=1, mean=c(MUD1[q],MUD2[q]),\n                   sigma=VCMatrix, lower=c(log(D1lower[q]),D2lower[q]), upper=c(log(D1upper[q]),D2upper[q]),\n                   algorithm=\"gibbs\")\n      \n      #---- Accept and Reject Sampling Algorithm----#\n      \n      if ((GH[2]<0) & (exp(GH[1])>=(RDVAR[q]-50)) & (exp(GH[1])<=(RDVAR[q]+50))){\n        GH1[count]=GH[1]\n        GH2[count]=GH[2]\n        #print(count)\n        count = count+1\n      } else if ((GH[2]>=0) & (GH[2]<Theta1)){\n        GH1[count]=GH[1]\n        GH2[count]=GH[2]\n        count = count+1\n      }\n    }\n    U2 = as.matrix(cbind(GH1,GH2),drawx,2)\n    FF[q,,]=U2\n  }\n  #-----------------------------MOD of 1000-------------------------------#\n  else if((RDVAR[q] %% 1000 == 0) & (RDVAR[q] %% 5000 != 0)){\n    \n    GH1=matrix(0,drawx,1)\n    GH2=matrix(0,drawx,1)\n    D1upper[q] = RDVAR[q]+500\n    D1lower[q] = RDVAR[q]-500\n    D2upper[q] = Theta2\n    D2lower[q] = -Inf\n    MUD1[q] = Data[q,5]\n    MUD2[q] = Data[q,6]\n    \n    count=1\n    while (count <= drawx){\n      \n      GH =rtmvnorm(n=1, mean=c(MUD1[q],MUD2[q]),\n                   sigma=VCMatrix, lower=c(log(D1lower[q]),D2lower[q]), upper=c(log(D1upper[q]),D2upper[q]),\n                   algorithm=\"gibbs\")\n      \n      #---- Accept and Reject Sampling Algorithm----#\n      \n      if ((GH[2]<0) & (exp(GH[1])>=(RDVAR[q]-50)) & (exp(GH[1])<=(RDVAR[q]+50))){\n        GH1[count]=GH[1]\n        GH2[count]=GH[2]\n        #print(count)\n        count = count+1\n      } else if ((GH[2]>=Theta1) & (GH[2]<Theta2)){\n        GH1[count]=GH[1]\n        GH2[count]=GH[2]\n        count = count+1\n      }\n    }\n    U2 = as.matrix(cbind(GH1,GH2),drawx,2)\n    FF[q,,]=U2\n  }\n  \n  #-----------------------------MOD of 5000-------------------------------#\n  else if (RDVAR[q] %% 5000 ==0){\n    D1upper[q] = RDVAR[q]+1000\n    D1lower[q] = RDVAR[q]-1000\n    D2upper[q] = Inf\n    D2lower[q] = -Inf\n    print(c(D2upper[q],D2lower[q]))\n    MUD1[q] = Data[q,5]\n    MUD2[q] = Data[q,6]\n    \n    count=1\n    while (count <= drawx)\n    {\n      GH =rtmvnorm(n=1, mean=c(MUD1[q],MUD2[q]),\n                   sigma=VCMatrix, lower=c(log(D1lower[q]),D2lower[q]), upper=c(log(D1upper[q]),D2upper[q]),\n                   algorithm=\"gibbs\")\n      \n      \n      #---- Accept and Reject Sampling Algorithm----#\n      \n      if ((GH[2]<0) & (exp(GH[1])>=(RDVAR[q]-50)) & (exp(GH[1])<=(RDVAR[q]+50)))\n      {\n        GH1[count]=GH[1]\n        GH2[count]=GH[2]\n        count = count+1\n      } \n      else if ((GH[2]>=0) & (GH[2]<Theta1))\n      {\n        if ((exp(GH[1])>=(RDVAR[q]-250)) & (exp(GH[1])<=(RDVAR[q]+250)))\n        {\n          GH1[count]=GH[1]\n          GH2[count]=GH[2]\n          count = count+1\n        }\n      } \n      else if ((GH[2]>=Theta1) & (GH[2]<Theta2))\n      {\n        if ((exp(GH[1])>=(RDVAR[q]-500)) & (exp(GH[1])<=(RDVAR[q]+500)))\n        {\n          GH1[count]=GH[1]\n          GH2[count]=GH[2]\n          count = count+1\n        }\n      } \n      else if ((GH[2]>=Theta2))\n      {\n        GH1[count]=GH[1]\n        GH2[count]=GH[2]\n        count = count+1\n      }\n    }\n    U3 = as.matrix(cbind(GH1,GH2),drawx,2)\n    FF[q,,]=U3\n  }\n  \n  ImpD = as.integer(exp(FF[q,,1]))\n  \n  write.csv(cbind(FF[q,,],ImpD),paste(c(\"C:/vkt1/R_MItest/Access_informal/Output_acc_informal/\",q,\".csv\"), collapse = ''))\n  \n}\n\n\n\n#===========================================================================================\n# Loop to printing the results into one single file\n#===========================================================================================\n\n# Converting a matrix in 3D into 2D dimensions\nrows=length(RDVAR)*drawx\nCollection3 =matrix(FF,rows,2)\nlnyD1 = exp(Collection3[,1])\nwrite.csv(Collection3, paste(c(\"C:/vkt1/R_MItest/Access_informal/Output_acc_informal/\",\"AllImputed_informal.csv\"), collapse = ''))\n\n\n#===========================================================================================\n# Print Histograms of several individuals\n#===========================================================================================\n\nprint(\" Case One===== indivdiual 7,600m distance\")\nhist(exp(FF[7,,1]),border=\"black\", col=\"lightblue\",xlim=c(6000,9000), ylim=c(0,300),\n     breaks=10,prob = F)\nprint(\" Case Two===== indivdiual 500\")\nhist(exp(FF[3,,1]),border=\"black\", col=\"lightblue\",xlim=c(2500,3500), ylim=c(0,300),\n     breaks=16,prob = F)\nprint(\" Case Three===== indivdiual 972\")\nhist(exp(FF[24,,1]),border=\"black\", col=\"lightblue\",xlim=c(5000,15000), ylim=c(0,300),\n     breaks=10,prob = F)\n\n\n#===========================================================================================\n# Draw the travel distance by each individual -Density Plot \n#===========================================================================================\n\nh <- hist(lnyD1, breaks = 50, plot=FALSE#,border=\"black\", col=\"lightblue\",freq=F #probability = F #freq=T\n)\nh$counts=h$counts/sum(h$counts)   #h$mids,h$counts\nplot(h,border=\"black\", col=\"lightblue\"\n     ,xlim = c(0,20000)#range(h$mids)* 0.9      # , xlim = c(0,3000)\n     ,ylim = c(0,0.25)#(max(h$counts)+max(h$counts)/1))\n     # , ylim = c(0,0.2)\n     #, axis(side=1, at=c(0,6000))      # c(-4, 0, 4)\n     ,cex.lab=1.2, cex.axis=1.2, cex.main=1.2, cex.sub=1.2\n     ,main=\"Histogram for Distance Traveled in m\"\n     ,xlab=\"Distance (m)\"\n     ,ylab=\"Probability\"\n     ,xaxs=\"i\", yaxs=\"i\" # meaning that 4% of the axis value is left on each side. To set this to 0: xaxs=\"i\". See the xaxs section in ?par for more information.\n     ,lwd = 2 # axes line width\n     # ,par(lwd=1.2)\n     ,axes = FALSE\n     ,ann=FALSE, xaxt=\"n\", yaxt=\"n\"\n)\n\n#grid(24, 24, lwd = 1,col ='black')\n#And then we can also add a legend, so it will be easy to tell which line is which.\n\nabline(v=seq(0, 5000, 500), col=\"gray48\",lty = 5,lwd = 1.2) # To add horizantl line simply add h=0.001,\nabline(v=seq(0, 5000, 100), col=\"darkgray\",lty = 4,lwd = 1.2) # To add horizantl line simply add h=0.001,\nabline(h=seq(0,(0.2),0.01), col=\"darkgray\",lty = 5,lwd = 1.2) # To add horizantl line simply add h=0.001,\nabline(h=c(0.05,0.1,0.15,0.2), col=\"gray48\",lty = 5,lwd = 1.2) # To add horizantl line simply add h=0.001,\n#abline(h=0.15, col=\"darkgray\",lty = 5,lwd = 1.2) # To add horizantl line simply add h=0.001,\nbox(lty = 5, col = 'red',font = 50, font.lab = 7, font.axis = 20\n    ,cex.lab=1.2, cex.axis=1.2, cex.main=1.2, cex.sub=1.2\n    ,lwd = 3)\n\n\n# generate the plot again to come to the front\nplot(h,add=TRUE,col=\"lightblue\",axes = FALSE,ann=FALSE, xaxt=\"n\", yaxt=\"n\"\n)\n\n#axis(1, h$breaks, labels = seq(0,5500,100), tick = TRUE, padj= -1.5)  #h$breaks\n\n# adjust the axes to fit your data range\naxis(1, seq(0,6000,500), labels = seq(0,6000,500), tick = TRUE, padj= -0.4,cex.axis = 1.2)  #h$breaks\naxis(2,labels = TRUE, tick = TRUE, padj= -0.1,cex.axis = 1.2)  #h$breaks\n\n# Draw lables of the axeses\nmtext(side = 1, text = \"Distance (m)\", line = 3,padj= -1.5, cex=1.2) \nmtext(side = 2, text = \"Probability\", line = 3,padj= 0.8, cex=1.2) \n# Title for the graph \ntitle(main=\"Histogram for Distance Traveled in m\")\n# Draw the lognormal distribution curve\nlines(seq(0, 5000, by=0.1), (100*dlnorm(seq(0, 5000, by=0.1),\n                                        mean(log(lnyD1)), sd(log(lnyD1)))), col=\"blue\",lwd = 2,\n      font = 5, font.lab = 7, font.axis = 7)\n\n# abline(v=767.0267, col=\"black\",lty = 5,lwd = 5) # To add horizantl line simply add h=0.001,\n# abline(v=602.1982, col=\"red\",lty = 5,  lwd = 5) # To add horizantl line simply add h=0.001,\n# abline(v=759.7315, col=\"blue\",lty = 5, lwd = 5) # To add horizantl line simply add h=0.001,\n\nabline(v=c(mean(lnyD1)) #,mean(RDVAR),exp(MUD1[1]))\n       , col = c(\"chartreuse4\", \"royalblue\", \"red\",\"blue\")\n       , lty = c(4,5,5)\n       ,lwd = c(2,1.2,1.2))\n\nlegend(x = \"right\", # location of legend within plot area\n       c(\"Mean\", \"Density\",\"logNormal distribution\"),\n       col = c(\"chartreuse4\", \"coral1\", \"blue\",\"red\"),\n       lwd = c(2, 2, 2,3),\n       fill = c(\"chartreuse4\", \"coral1\", \"blue\",\"red\")\n       ,title=\"Line types\"\n       ,text.font=2\n       ,bg='white')\n\n# Draw density function\n#lines(density(lnyD1), col=\"red\")\nden_gh =density(lnyD1,na.rm=T)\nden_ghx = den_gh$x\nden_ghy = den_gh$y*100  # 100 scale is for matching our y-axis new scale which show probability not density\n# Remember that probability =(density in y)*(base of the bar)\n\nlines(den_ghx,den_ghy, # density plot\n      lwd = 2, # thickness of line\n      col = \"coral1\"\n)\n\n# Add a line for the mean:\n# \n# abline(v = mean(RDVAR),\n#        col = \"royalblue\",\n#        lwd = 2)\n\n# #And add a line for the median:\n# \n# abline(v = median(RDVAR),\n#        col = \"red\",\n#        lwd = 2)\n\n\n\n#===========================================================================================\n# Draw the travel distance by each individual -Frequency Plot \n#===========================================================================================\n\nh2 <- hist(lnyD1, breaks = 50, plot=FALSE#,border=\"black\", col=\"lightblue\",freq=F #probability = F #freq=T\n)\nSS =max(h2$counts)+max(h2$counts)/3\nh2 <- hist(lnyD1, breaks = 50, plot=T,freq=T\n           ,xlim = c(0,20000)#range(h$mids)* 0.9      # , xlim = c(0,3000)\n           ,ylim = c(0,SS)#(max(h$counts)+max(h$counts)/1))\n           ,xaxs=\"i\", yaxs=\"i\"\n           ,axes = FALSE\n           ,ann=FALSE, xaxt=\"n\", yaxt=\"n\"\n           \n)\n\n\n#grid(24, 24, lwd = 1,col ='black')\n#And then we can also add a legend, so it will be easy to tell which line is which.\n\nabline(v=seq(0, 5000, 500), col=\"gray48\",lty = 5,lwd = 1.2) # To add horizantl line simply add h=0.001,\nabline(v=seq(0, 5000, 100), col=\"darkgray\",lty = 4,lwd = 1.2) # To add horizantl line simply add h=0.001,\nabline(h=seq(0,SS+83646.67,10000), col=\"darkgray\",lty = 5,lwd = 1.2) # To add horizantl line simply add h=0.001,\nabline(h=c(50000,100000,150000,200000), col=\"gray48\",lty = 5,lwd = 1.2) # To add horizantl line simply add h=0.001,\n#abline(h=0.15, col=\"darkgray\",lty = 5,lwd = 1.2) # To add horizantl line simply add h=0.001,\nbox(lty = 5, col = 'red',font = 50, font.lab = 7, font.axis = 20\n    ,cex.lab=1.2, cex.axis=1.2, cex.main=1.2, cex.sub=1.2\n    ,lwd = 3)\n\n\n# generate the plot again to come to the front\nplot(h2,add=TRUE,col=\"lightblue\",axes = FALSE,ann=FALSE, xaxt=\"n\", yaxt=\"n\"\n)\n\n#axis(1, h$breaks, labels = seq(0,5500,100), tick = TRUE, padj= -1.5)  #h$breaks\n\n# adjust the axes to fit your data range\naxis(1, seq(0,6000,500), labels = seq(0,6000,500), tick = TRUE, padj= -0.4,cex.axis = 1.2)  #h$breaks\naxis(2,labels = TRUE, tick = TRUE, padj= -0.1,cex.axis = 1.2)  #h$breaks\n\n# Draw lables of the axeses\nmtext(side = 1, text = \"Distance (m)\", line = 3,padj= -1.5, cex=1.2) \nmtext(side = 2, text = \"Probability\", line = 3,padj= 0.8, cex=1.2) \n# Title for the graph \ntitle(main=\"Histogram for Distance Traveled in m\")\n\nabline(v=c(mean(lnyD1)) #,mean(RDVAR),exp(MUD1[1]))\n       , col = c(\"chartreuse4\", \"royalblue\", \"red\",\"blue\")\n       , lty = c(4,5,5)\n       ,lwd = c(2,1.2,1.2))\n\nlegend(x = \"right\", # location of legend within plot area\n       c(\"Mean\"),\n       col = c(\"chartreuse4\", \"coral1\", \"blue\",\"red\"),\n       lwd = c(2, 2, 2,3),\n       fill = c(\"chartreuse4\", \"coral1\", \"blue\",\"red\")\n       ,title=\"Line types\"\n       ,text.font=2\n       ,bg='white')\n\n\n",
    "created" : 1546930287154.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2802255869",
    "id" : "C6F5AB75",
    "lastKnownWriteTime" : 1547006207,
    "last_content_update" : 1547006207675,
    "path" : "C:/vkt1/R_MItest/Access_informal/R_acc_informal.txt",
    "project_path" : "R_acc_informal.txt",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}