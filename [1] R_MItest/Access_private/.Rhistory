D2lower = matrix(0,length(RDVAR),1)
MUD1    = matrix(0,length(RDVAR),1)
MUD2    = matrix(0,length(RDVAR),1)
drawx=1000 # Number of draws from the bivariate normal distribution
GH1=matrix(0,drawx,1)
GH2=matrix(0,drawx,1)
#########################################################################
#                                                                       #
#-------------------Drawing for a specified individual------------------#
#                                                                       #
#########################################################################
q=98
RangeD=5000
D1upper[q] = RDVAR[q]+RangeD/2
D1lower[q] = RDVAR[q]-RangeD/2
D2upper[q] = Inf
D2lower[q] = -Inf
MUD1[q] = Data[q,6]
MUD2[q] = Data[q,7]
#GH <- rmvnorm(n=drawx, mean=c(MUD1[q],MUD2[q]),sigma=VCMatrix)
GH <- rtmvnorm(n=drawx, mean=c(MUD1[q],MUD2[q]),
sigma=VCMatrix, lower=c(log(D1lower[q]), D2lower[q]), upper=c(log(D1upper[q]),D2upper[q]),
algorithm="gibbs")
print (GH)
FF<-array(0,dim=c(length(RDVAR),drawx,2))
FF[q,,]=GH
ImpD = as.integer(exp(FF[q,,1]))
write.csv(cbind(FF[q,,],ImpD),paste(c("C:/vkt1/R_MItest/Access_private/Output_acc_private/",q,".csv"), collapse = ''))
#########################################################################
#                                                                       #
#----------------Drawing 1000 values for each individual----------------#
#                                                                       #
#########################################################################
FF<-array(0,dim=c(length(RDVAR),drawx,2))
for (q in 98:length(RDVAR)){
cat("\014")
print(c("Indivdiual ",q))
#-----------------------------MOD of 500-------------------------------#
if((RDVAR[q] %% 50 == 0) & (RDVAR[q] %% 1000 != 0)){
D1upper[q] = RDVAR[q]+250
D1lower[q] = RDVAR[q]-250
D2upper[q] = 0
D2lower[q] = -Inf
MUD1[q] = Data[q,6]
MUD2[q] = Data[q,7]
GH <- rtmvnorm(n=drawx, mean=c(MUD1[q],MUD2[q]),
sigma=VCMatrix, lower=c(log(D1lower[q]), D2lower[q]), upper=c(log(D1upper[q]),D2upper[q]),
algorithm="gibbs")
FF[q,,]=GH
}
#-----------------------------MOD of 1000-------------------------------#
else if((RDVAR[q] %% 1000 == 0) & (RDVAR[q] %% 5000 != 0)){
D1upper[q] = RDVAR[q]+500
D1lower[q] = RDVAR[q]-500
D2upper[q] = Theta
D2lower[q] = -Inf
MUD1[q] = Data[q,6]
MUD2[q] = Data[q,7]
count=1
while (count <= drawx){
GH <- rtmvnorm(n=1, mean=c(MUD1[q],MUD2[q]),
sigma=VCMatrix, lower=c(log(D1lower[q]),D2lower[q]), upper=c(log(D1upper[q]),D2upper[q]),
algorithm="gibbs")
#---- Accept and Reject Sampling Algorithm----#
if ((GH[2]<0) & (exp(GH[1])>=(RDVAR[q]-250)) & (exp(GH[1])<=(RDVAR[q]+250))){
GH1[count]=GH[1]
GH2[count]=GH[2]
#print(count)
count = count+1
} else if ((GH[2]>=0) & (GH[2]<Theta)){
GH1[count]=GH[1]
GH2[count]=GH[2]
count = count+1
}
}
U2 = as.matrix(cbind(GH1,GH2),drawx,2)
FF[q,,]=U2
}
#-----------------------------MOD of 5000-------------------------------#
else if (RDVAR[q] %% 5000 ==0){
D1upper[q] = RDVAR[q]+2500
D1lower[q] = RDVAR[q]-2500
D2upper[q] = Inf
D2lower[q] = -Inf
print(c(D2upper[q],D2lower[q]))
MUD1[q] = Data[q,6]
MUD2[q] = Data[q,7]
count=1
while (count <= drawx)
{
GH <- rtmvnorm(n=1, mean=c(MUD1[q],MUD2[q]),
sigma=VCMatrix, lower=c(log(D1lower[q]),D2lower[q]), upper=c(log(D1upper[q]),D2upper[q]),
algorithm="rejection")
print(GH)
#---- Accept and Reject Sampling Algorithm----#
if ((GH[2]<0) & (exp(GH[1])>=(RDVAR[q]-250)) & (exp(GH[1])<=(RDVAR[q]+250)))
{
GH1[count]=GH[1]
GH2[count]=GH[2]
count = count+1
}
else if ((GH[2]>=0) & (GH[2]<Theta))
{
if ((exp(GH[1])>=(RDVAR[q]-500)) & (exp(GH[1])<=(RDVAR[q]+500)))
{
GH1[count]=GH[1]
GH2[count]=GH[2]
count = count+1
}
}
else if ((GH[2]>=Theta))
{
GH1[count]=GH[1]
GH2[count]=GH[2]
count = count+1
}
}
U3 = as.matrix(cbind(GH1,GH2),drawx,2)
FF[q,,]=U3
}
ImpD = as.integer(exp(FF[q,,1]))
write.csv(cbind(FF[q,,],ImpD),paste(c("C:/vkt1/R_MItest/Access_private/Output_acc_private/",q,".csv"), collapse = ''))
}
for (q in 1:length(RDVAR)){
cat("\014")
print(c("Indivdiual ",q))
#-----------------------------MOD of 500-------------------------------#
if((RDVAR[q] %% 50 == 0) & (RDVAR[q] %% 1000 != 0)){
D1upper[q] = RDVAR[q]+250
D1lower[q] = RDVAR[q]-250
D2upper[q] = 0
D2lower[q] = -Inf
MUD1[q] = Data[q,6]
MUD2[q] = Data[q,7]
GH <- rtmvnorm(n=drawx, mean=c(MUD1[q],MUD2[q]),
sigma=VCMatrix, lower=c(log(D1lower[q]), D2lower[q]), upper=c(log(D1upper[q]),D2upper[q]),
algorithm="gibbs")
FF[q,,]=GH
}
#-----------------------------MOD of 1000-------------------------------#
else if((RDVAR[q] %% 1000 == 0) & (RDVAR[q] %% 5000 != 0)){
D1upper[q] = RDVAR[q]+500
D1lower[q] = RDVAR[q]-500
D2upper[q] = Theta
D2lower[q] = -Inf
MUD1[q] = Data[q,6]
MUD2[q] = Data[q,7]
count=1
while (count <= drawx){
GH <- rtmvnorm(n=1, mean=c(MUD1[q],MUD2[q]),
sigma=VCMatrix, lower=c(log(D1lower[q]),D2lower[q]), upper=c(log(D1upper[q]),D2upper[q]),
algorithm="gibbs")
#---- Accept and Reject Sampling Algorithm----#
if ((GH[2]<0) & (exp(GH[1])>=(RDVAR[q]-250)) & (exp(GH[1])<=(RDVAR[q]+250))){
GH1[count]=GH[1]
GH2[count]=GH[2]
#print(count)
count = count+1
} else if ((GH[2]>=0) & (GH[2]<Theta)){
GH1[count]=GH[1]
GH2[count]=GH[2]
count = count+1
}
}
U2 = as.matrix(cbind(GH1,GH2),drawx,2)
FF[q,,]=U2
}
#-----------------------------MOD of 5000-------------------------------#
else if (RDVAR[q] %% 5000 ==0){
D1upper[q] = RDVAR[q]+2500
D1lower[q] = RDVAR[q]-2500
D2upper[q] = Inf
D2lower[q] = -Inf
print(c(D2upper[q],D2lower[q]))
MUD1[q] = Data[q,6]
MUD2[q] = Data[q,7]
count=1
while (count <= drawx)
{
GH <- rtmvnorm(n=1, mean=c(MUD1[q],MUD2[q]),
sigma=VCMatrix, lower=c(log(D1lower[q]),D2lower[q]), upper=c(log(D1upper[q]),D2upper[q]),
algorithm="rejection")
print(GH)
#---- Accept and Reject Sampling Algorithm----#
if ((GH[2]<0) & (exp(GH[1])>=(RDVAR[q]-250)) & (exp(GH[1])<=(RDVAR[q]+250)))
{
GH1[count]=GH[1]
GH2[count]=GH[2]
count = count+1
}
else if ((GH[2]>=0) & (GH[2]<Theta))
{
if ((exp(GH[1])>=(RDVAR[q]-500)) & (exp(GH[1])<=(RDVAR[q]+500)))
{
GH1[count]=GH[1]
GH2[count]=GH[2]
count = count+1
}
}
else if ((GH[2]>=Theta))
{
GH1[count]=GH[1]
GH2[count]=GH[2]
count = count+1
}
}
U3 = as.matrix(cbind(GH1,GH2),drawx,2)
FF[q,,]=U3
}
ImpD = as.integer(exp(FF[q,,1]))
write.csv(cbind(FF[q,,],ImpD),paste(c("C:/vkt1/R_MItest/Access_private/Output_acc_private/",q,".csv"), collapse = ''))
}
#ACCESS PRIVATE
##########################################################################
dev.off(dev.list()["RStudioGD"]) # clean the Graph Area
rm(list=ls())                    # clean the Workspace (dataset)
cat("\014")                      # clean the console area
graphics.off()                   # close graphics windows (For R Script)
#########################################################################
#Data <- read.csv(file.choose())
Data <- read.csv("acc_private.csv")
library(tmvtnorm)
# Random number generation
set.seed(123)
#Data Input
#Frequency= Data[,2]
#House hold income<30k= Data[,3]
#Vehicle ownership= Data[,4]
RDVAR = Data[,5]  # Reported distance
mu1   = Data[,6]
mu2   = Data[,7]
Theta=2.1304
VCMatrix= matrix(c(0.665, 0.753, 0.753, 1.00), 2, 2)
#Draws = 1000  # Number of draws from the bivariate normal distribution
D1upper = matrix(0,length(RDVAR),1)
D1lower = matrix(0,length(RDVAR),1)
D2upper = matrix(0,length(RDVAR),1)
D2lower = matrix(0,length(RDVAR),1)
MUD1    = matrix(0,length(RDVAR),1)
MUD2    = matrix(0,length(RDVAR),1)
drawx=1000 # Number of draws from the bivariate normal distribution
GH1=matrix(0,drawx,1)
GH2=matrix(0,drawx,1)
#########################################################################
#                                                                       #
#-------------------Drawing for a specified individual------------------#
#                                                                       #
#########################################################################
#q=98
#RangeD=5000
#D1upper[q] = RDVAR[q]+RangeD/2
#D1lower[q] = RDVAR[q]-RangeD/2
#D2upper[q] = Inf
#D2lower[q] = -Inf
#MUD1[q] = Data[q,6]
#MUD2[q] = Data[q,7]
#GH <- rmvnorm(n=drawx, mean=c(MUD1[q],MUD2[q]),sigma=VCMatrix)
#GH <- rtmvnorm(n=drawx, mean=c(MUD1[q],MUD2[q]),
#               sigma=VCMatrix, lower=c(log(D1lower[q]), D2lower[q]), upper=c(log(D1upper[q]),D2upper[q]),
#               algorithm="gibbs")
#print (GH)
#FF<-array(0,dim=c(length(RDVAR),drawx,2))
#FF[q,,]=GH
#ImpD = as.integer(exp(FF[q,,1]))
#write.csv(cbind(FF[q,,],ImpD),paste(c("C:/vkt1/R_MItest/Access_private/Output_acc_private/",q,".csv"), collapse = ''))
#########################################################################
#                                                                       #
#----------------Drawing 1000 values for each individual----------------#
#                                                                       #
#########################################################################
FF<-array(0,dim=c(length(RDVAR),drawx,2))
for (q in 1:length(RDVAR)){
cat("\014")
print(c("Indivdiual ",q))
#-----------------------------MOD of 500-------------------------------#
if((RDVAR[q] %% 50 == 0) & (RDVAR[q] %% 1000 != 0)){
D1upper[q] = RDVAR[q]+250
D1lower[q] = RDVAR[q]-250
D2upper[q] = 0
D2lower[q] = -Inf
MUD1[q] = Data[q,6]
MUD2[q] = Data[q,7]
GH <- rtmvnorm(n=drawx, mean=c(MUD1[q],MUD2[q]),
sigma=VCMatrix, lower=c(log(D1lower[q]), D2lower[q]), upper=c(log(D1upper[q]),D2upper[q]),
algorithm="gibbs")
FF[q,,]=GH
}
#-----------------------------MOD of 1000-------------------------------#
else if((RDVAR[q] %% 1000 == 0) & (RDVAR[q] %% 5000 != 0)){
D1upper[q] = RDVAR[q]+500
D1lower[q] = RDVAR[q]-500
D2upper[q] = Theta
D2lower[q] = -Inf
MUD1[q] = Data[q,6]
MUD2[q] = Data[q,7]
count=1
while (count <= drawx){
GH <- rtmvnorm(n=1, mean=c(MUD1[q],MUD2[q]),
sigma=VCMatrix, lower=c(log(D1lower[q]),D2lower[q]), upper=c(log(D1upper[q]),D2upper[q]),
algorithm="gibbs")
#---- Accept and Reject Sampling Algorithm----#
if ((GH[2]<0) & (exp(GH[1])>=(RDVAR[q]-250)) & (exp(GH[1])<=(RDVAR[q]+250))){
GH1[count]=GH[1]
GH2[count]=GH[2]
#print(count)
count = count+1
} else if ((GH[2]>=0) & (GH[2]<Theta)){
GH1[count]=GH[1]
GH2[count]=GH[2]
count = count+1
}
}
U2 = as.matrix(cbind(GH1,GH2),drawx,2)
FF[q,,]=U2
}
#-----------------------------MOD of 5000-------------------------------#
else if (RDVAR[q] %% 5000 ==0){
D1upper[q] = RDVAR[q]+2500
D1lower[q] = RDVAR[q]-2500
D2upper[q] = Inf
D2lower[q] = -Inf
print(c(D2upper[q],D2lower[q]))
MUD1[q] = Data[q,6]
MUD2[q] = Data[q,7]
count=1
while (count <= drawx)
{
GH <- rtmvnorm(n=1, mean=c(MUD1[q],MUD2[q]),
sigma=VCMatrix, lower=c(log(D1lower[q]),D2lower[q]), upper=c(log(D1upper[q]),D2upper[q]),
algorithm="rejection")
print(GH)
#---- Accept and Reject Sampling Algorithm----#
if ((GH[2]<0) & (exp(GH[1])>=(RDVAR[q]-250)) & (exp(GH[1])<=(RDVAR[q]+250)))
{
GH1[count]=GH[1]
GH2[count]=GH[2]
count = count+1
}
else if ((GH[2]>=0) & (GH[2]<Theta))
{
if ((exp(GH[1])>=(RDVAR[q]-500)) & (exp(GH[1])<=(RDVAR[q]+500)))
{
GH1[count]=GH[1]
GH2[count]=GH[2]
count = count+1
}
}
else if ((GH[2]>=Theta))
{
GH1[count]=GH[1]
GH2[count]=GH[2]
count = count+1
}
}
U3 = as.matrix(cbind(GH1,GH2),drawx,2)
FF[q,,]=U3
}
ImpD = as.integer(exp(FF[q,,1]))
write.csv(cbind(FF[q,,],ImpD),paste(c("C:/vkt1/R_MItest/Access_private/Output_acc_private/",q,".csv"), collapse = ''))
}
rows=length(RDVAR)*drawx
Collection3 =matrix(FF,rows,2)
lnyD1 = exp(Collection3[,1])
write.csv(Collection3, paste(c("C:/vkt1/R_MItest/Access_private/Output_acc_private/","AllImputed_access private.csv"), collapse = ''))
#ACCESS PRIVATE
##########################################################################
dev.off(dev.list()["RStudioGD"]) # clean the Graph Area
rm(list=ls())                    # clean the Workspace (dataset)
cat("\014")                      # clean the console area
graphics.off()                   # close graphics windows (For R Script)
#########################################################################
#Data <- read.csv(file.choose())
Data <- read.csv("acc_private.csv")
library(tmvtnorm)
# Random number generation
set.seed(123)
#Data Input
#Frequency= Data[,2]
#House hold income<30k= Data[,3]
#Vehicle ownership= Data[,4]
RDVAR = Data[,5]  # Reported distance
mu1   = Data[,6]
mu2   = Data[,7]
Theta=2.1304
VCMatrix= matrix(c(0.665, 0.753, 0.753, 1.00), 2, 2)
#Draws = 1000  # Number of draws from the bivariate normal distribution
D1upper = matrix(0,length(RDVAR),1)
D1lower = matrix(0,length(RDVAR),1)
D2upper = matrix(0,length(RDVAR),1)
D2lower = matrix(0,length(RDVAR),1)
MUD1    = matrix(0,length(RDVAR),1)
MUD2    = matrix(0,length(RDVAR),1)
drawx=1000 # Number of draws from the bivariate normal distribution
GH1=matrix(0,drawx,1)
GH2=matrix(0,drawx,1)
#########################################################################
#                                                                       #
#-------------------Drawing for a specified individual------------------#
#                                                                       #
#########################################################################
#q=98
#RangeD=5000
#D1upper[q] = RDVAR[q]+RangeD/2
#D1lower[q] = RDVAR[q]-RangeD/2
#D2upper[q] = Inf
#D2lower[q] = -Inf
#MUD1[q] = Data[q,6]
#MUD2[q] = Data[q,7]
#GH <- rmvnorm(n=drawx, mean=c(MUD1[q],MUD2[q]),sigma=VCMatrix)
#GH <- rtmvnorm(n=drawx, mean=c(MUD1[q],MUD2[q]),
#               sigma=VCMatrix, lower=c(log(D1lower[q]), D2lower[q]), upper=c(log(D1upper[q]),D2upper[q]),
#               algorithm="gibbs")
#print (GH)
#FF<-array(0,dim=c(length(RDVAR),drawx,2))
#FF[q,,]=GH
#ImpD = as.integer(exp(FF[q,,1]))
#write.csv(cbind(FF[q,,],ImpD),paste(c("C:/vkt1/R_MItest/Access_private/Output_acc_private/",q,".csv"), collapse = ''))
#########################################################################
#                                                                       #
#----------------Drawing 1000 values for each individual----------------#
#                                                                       #
#########################################################################
FF<-array(0,dim=c(length(RDVAR),drawx,2))
for (q in 1:length(RDVAR)){
cat("\014")
print(c("Indivdiual ",q))
#-----------------------------MOD of 500-------------------------------#
if((RDVAR[q] %% 50 == 0) & (RDVAR[q] %% 1000 != 0)){
D1upper[q] = RDVAR[q]+250
D1lower[q] = RDVAR[q]-250
D2upper[q] = 0
D2lower[q] = -Inf
MUD1[q] = Data[q,6]
MUD2[q] = Data[q,7]
GH <- rtmvnorm(n=drawx, mean=c(MUD1[q],MUD2[q]),
sigma=VCMatrix, lower=c(log(D1lower[q]), D2lower[q]), upper=c(log(D1upper[q]),D2upper[q]),
algorithm="gibbs")
FF[q,,]=GH
}
#-----------------------------MOD of 1000-------------------------------#
else if((RDVAR[q] %% 1000 == 0) & (RDVAR[q] %% 5000 != 0)){
D1upper[q] = RDVAR[q]+500
D1lower[q] = RDVAR[q]-500
D2upper[q] = Theta
D2lower[q] = -Inf
MUD1[q] = Data[q,6]
MUD2[q] = Data[q,7]
count=1
while (count <= drawx){
GH <- rtmvnorm(n=1, mean=c(MUD1[q],MUD2[q]),
sigma=VCMatrix, lower=c(log(D1lower[q]),D2lower[q]), upper=c(log(D1upper[q]),D2upper[q]),
algorithm="gibbs")
#---- Accept and Reject Sampling Algorithm----#
if ((GH[2]<0) & (exp(GH[1])>=(RDVAR[q]-250)) & (exp(GH[1])<=(RDVAR[q]+250))){
GH1[count]=GH[1]
GH2[count]=GH[2]
#print(count)
count = count+1
} else if ((GH[2]>=0) & (GH[2]<Theta)){
GH1[count]=GH[1]
GH2[count]=GH[2]
count = count+1
}
}
U2 = as.matrix(cbind(GH1,GH2),drawx,2)
FF[q,,]=U2
}
#-----------------------------MOD of 5000-------------------------------#
else if (RDVAR[q] %% 5000 ==0){
D1upper[q] = RDVAR[q]+2500
D1lower[q] = RDVAR[q]-2500
D2upper[q] = Inf
D2lower[q] = -Inf
print(c(D2upper[q],D2lower[q]))
MUD1[q] = Data[q,6]
MUD2[q] = Data[q,7]
count=1
while (count <= drawx)
{
GH <- rtmvnorm(n=1, mean=c(MUD1[q],MUD2[q]),
sigma=VCMatrix, lower=c(log(D1lower[q]),D2lower[q]), upper=c(log(D1upper[q]),D2upper[q]),
algorithm="rejection")
print(GH)
#---- Accept and Reject Sampling Algorithm----#
if ((GH[2]<0) & (exp(GH[1])>=(RDVAR[q]-250)) & (exp(GH[1])<=(RDVAR[q]+250)))
{
GH1[count]=GH[1]
GH2[count]=GH[2]
count = count+1
}
else if ((GH[2]>=0) & (GH[2]<Theta))
{
if ((exp(GH[1])>=(RDVAR[q]-500)) & (exp(GH[1])<=(RDVAR[q]+500)))
{
GH1[count]=GH[1]
GH2[count]=GH[2]
count = count+1
}
}
else if ((GH[2]>=Theta))
{
GH1[count]=GH[1]
GH2[count]=GH[2]
count = count+1
}
}
U3 = as.matrix(cbind(GH1,GH2),drawx,2)
FF[q,,]=U3
}
ImpD = as.integer(exp(FF[q,,1]))
write.csv(cbind(FF[q,,],ImpD),paste(c("C:/vkt1/R_MItest/Access_private/Output_acc_private/",q,".csv"), collapse = ''))
}
